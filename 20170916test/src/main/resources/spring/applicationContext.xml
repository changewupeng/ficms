<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
       <!--引入jdbc配置文件   -->
       <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
              <property name="locations">
                     <list>
                            <value>classpath:spring/fiomsDB.properties</value>
                     </list>
              </property>
              <property name="ignoreUnresolvablePlaceholders" value="true" />
       </bean>

       <context:component-scan base-package="com.fioms">
              <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
       </context:component-scan>
       <!-- dataSource 配置 -->
       <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
              <property name="driverClass">
                     <value>${jdbc.driver}</value>
              </property>
              <property name="jdbcUrl">
                     <value>${jdbc.url}</value>
              </property>
              <property name="user">
                     <value>${jdbc.username}</value>
              </property>
              <property name="password">
                     <value>${jdbc.password}</value>
              </property>

              <property name="maxPoolSize">
                     <value>${maxPoolSize}</value>
              </property>
              <property name="minPoolSize">
                     <value>${minPoolSize}</value>
              </property>
              <property name="initialPoolSize">
                     <value>${initialPoolSize}</value>
              </property>
              <property name="maxIdleTime">
                     <value>${maxIdleTime}</value>
              </property>
       </bean>

      <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
             <property name="dataSource" ref="dataSource"></property>
             <property name="hibernateProperties">
                    <props>
                           <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                           <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                           <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                           <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                           <!-- 开启二级缓存 ehcache -->
                           <prop key="hibernate.cache.use_second_level_cache">true</prop>
                           <!-- 开启查询的二级缓存  如果不需要就不设置-->
                           <prop key="hibernate.cache.use_query_cache">true</prop>
                           <!-- Hibernate4.0以上设置factory -->
                           <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
                           <!-- 二级缓存 ehcache的配置文件位置 -->
                           <prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</prop>
                    </props>
             </property>
             <property name="configLocation">
                    <value>classpath:hibernate.cfg.xml</value>
             </property>
      </bean>

       <!-- 配置事务管理器 -->
       <bean id="transactionManager"
             class="org.springframework.orm.hibernate4.HibernateTransactionManager">
              <property name="sessionFactory" ref="sessionFactory" />
       </bean>

       <!-- 配置事务增强处理Bean，指定事务管理器 -->
       <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
              <!-- 配置详细事务处理语义 -->
              <tx:attributes>
                     <tx:method name="insert*" propagation="REQUIRED" />
                     <tx:method name="update*" propagation="REQUIRED" />
                     <tx:method name="delete*" propagation="REQUIRED" />
                     <tx:method name="do*" propagation="REQUIRED" />
                     <tx:method name="add*" propagation="REQUIRED" />

                     <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
                     <tx:method name="find*" propagation="REQUIRED" read-only="true" />
                     <tx:method name="select*" propagation="SUPPORTS" read-only="true" />
                     <tx:method name="load*" propagation="SUPPORTS" read-only="true" />

                     <!-- 其他采用默认事务方式 -->
                     <tx:method name="*" />

              </tx:attributes>
       </tx:advice>
       <!-- 使用annotation定义事务 -->
       <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
       <!-- Spring aop事务管理 -->
       <aop:config proxy-target-class="true">
              <!-- 配置切入点 -->
              <aop:pointcut id="transactionPointcut"
                            expression="execution( * com.fioms.service.*.*(..))" />
              <!-- 指定在txAdvice切入点应用txAdvice事务增强处理 -->
              <aop:advisor pointcut-ref="transactionPointcut"
                           advice-ref="transactionAdvice" />
       </aop:config>

</beans>

